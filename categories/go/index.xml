<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Go on Magpie Programming</title>
    <link>https://magpieprogramming.com/categories/go/</link>
    <description>Recent content in Go on Magpie Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>magpieprogramming@gmail.com (Mr Magpie)</managingEditor>
    <webMaster>magpieprogramming@gmail.com (Mr Magpie)</webMaster>
    <copyright>Â©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Thu, 11 Jun 2020 10:19:59 +0100</lastBuildDate>
    
        <atom:link href="https://magpieprogramming.com/categories/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Go: Beginner 3 - Variables</title>
        <link>https://magpieprogramming.com/posts/go/beginner/go.-3-variables/</link>
        <pubDate>Thu, 11 Jun 2020 10:19:59 +0100</pubDate>
        <author>magpieprogramming@gmail.com (Mr Magpie)</author>
        <atom:modified>Thu, 11 Jun 2020 10:19:59 +0100</atom:modified>
        <guid>https://magpieprogramming.com/posts/go/beginner/go.-3-variables/</guid>
        <description>As promised in the last intallment of Go: Beginners, we are going to be addressing the topic of variables in Go. Variables are present in almost all modern programming languages and allow us as programmers to store data and use that data over and over in interesting ways. Variables can be descriptors (like body height, age or name) or could be there just to help (hold this while I do this other thing).</description>
        
        <dc:creator>Mr Magpie</dc:creator>
        
        
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go: Beginner</category>
            
          
        
      </item>
      
      <item>
        <title>Go: Beginner 2 - Types</title>
        <link>https://magpieprogramming.com/posts/go/beginner/go.-2-types/</link>
        <pubDate>Wed, 10 Jun 2020 09:31:08 +0100</pubDate>
        <author>magpieprogramming@gmail.com (Mr Magpie)</author>
        <atom:modified>Wed, 10 Jun 2020 09:31:08 +0100</atom:modified>
        <guid>https://magpieprogramming.com/posts/go/beginner/go.-2-types/</guid>
        <description>Following on from our previous &amp;ldquo;Hello World&amp;rdquo; tutorial, the next order of business to addres is types. Types are exactly &amp;lsquo;what it says on the tin&amp;rsquo;. Types are what the data we give to the program should be seen as, whether that be a number, text or a multitude of other possibilities.
Officially, Go has 4 main types of type&amp;hellip; Sounds confusing, but for now, we only need to know about one of these: the basic type.</description>
        
        <dc:creator>Mr Magpie</dc:creator>
        
        
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go: Beginner</category>
            
          
        
      </item>
      
      <item>
        <title>Go: Beginner 1 - Hello World</title>
        <link>https://magpieprogramming.com/posts/go/beginner/go.-1-hello-world/</link>
        <pubDate>Tue, 09 Jun 2020 14:57:12 +0100</pubDate>
        <author>magpieprogramming@gmail.com (Mr Magpie)</author>
        <atom:modified>Tue, 09 Jun 2020 14:57:12 +0100</atom:modified>
        <guid>https://magpieprogramming.com/posts/go/beginner/go.-1-hello-world/</guid>
        <description>In order to complete this tutorial, it is expected that you have a working Go programming environment. If you are still needing to set this up, you can follow along with our tutorial here if you are using Windows or using the official Go Docs for other operating systems.
Our First Program In this tutorial, we&amp;rsquo;re going to be writing our very first Go program and understanding what exactly it all means.</description>
        
        <dc:creator>Mr Magpie</dc:creator>
        
        
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go: Beginner</category>
            
          
        
      </item>
      
      <item>
        <title>Getting Set Up With Go</title>
        <link>https://magpieprogramming.com/posts/go/beginner/go-setup/</link>
        <pubDate>Tue, 09 Jun 2020 10:05:49 +0100</pubDate>
        <author>magpieprogramming@gmail.com (Mr Magpie)</author>
        <atom:modified>Tue, 09 Jun 2020 10:05:49 +0100</atom:modified>
        <guid>https://magpieprogramming.com/posts/go/beginner/go-setup/</guid>
        <description>So, you&amp;rsquo;ve decided to begin learning Go, but you&amp;rsquo;re not too sure how to get started. Maybe you&amp;rsquo;ve gone through the &amp;ldquo;A Tour of Go&amp;rdquo; but now you want to set up your own environment for you own machine. Well, in the sections below you can find out how to do just that and get ready to start programming your own projects.
The following is applicable to Windows installations, but similar instructions may be found in the official Go Docs for other operating systems.</description>
        
        <dc:creator>Mr Magpie</dc:creator>
        
        
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Setup</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go</category>
            
          
            
              <category>Beginner</category>
            
          
        
        
          
            
              <category>Go: Beginner</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
[{"content":"So, you\u0026rsquo;ve decided to begin learning Go, but you\u0026rsquo;re not too sure how to get started. Maybe you\u0026rsquo;ve gone through the \u0026ldquo;A Tour of Go\u0026rdquo; but now you want to set up your own environment for you own machine. Well, in the sections below you can find out how to do just that and get ready to start programming your own projects.\nThe following is applicable to Windows installations, but similar instructions may be found in the official Go Docs for other operating systems.\nDownloading and Installing The first thing we need to get started are some download files. The Go Windows installer file (.msi) can be found at the following URL:\nhttps://golang.org/dl/\nOnce downloaded, run this file and make a mental note of where the Go files have been stored in your system (Without any change, this should be C:\\Go by default).\nWith the installation complete, you should be able to open up a cmd or Powershell terminal and use the following commands:\n go version go env  Having run \u0026ldquo;go env\u0026rdquo;, you should find that GOROOT is equal to the installation directory for Go.\nIf that isn\u0026rsquo;t the case, you may need to manually change this using the \u0026ldquo;go env -w GOROOT=\u0026rdquo; command.\nIf the command wasn\u0026rsquo;t recognised, you may need to manually go into the environment variables (Settings / System and Security / System / Advanced System Settings / Environment Variables) and add the install directory\u0026rsquo;s bin folder to the system PATH variable. Restart your terminal and the commands should now work Creating a Go Workspace To create your new Go workspace we first need to create a folder to have it in. You can make this anywhere and call it anything you like.\nThis folder is where we\u0026rsquo;re going to store all of our projects in neat folders. Let\u0026rsquo;s try making one now to test that everything is installed and working as expected. You should have the following directory sturcture for each project we create:\nGo Workspace\r\r Project  build out pkg res src  main       \r\r'use strict';\rvar containerId = JSON.parse(\"\\\"2f1fae64fca20e72\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r The main folder can be renamed to anything you like, but for all of our projects, this is where our code to be run is going to be placed. Let\u0026rsquo;s make that file now by adding a .go file to main, which I\u0026rsquo;ve named run.go.\nMaking our Go Builder Now, Go is what is known in the business as a compiled language. That is, the computer cannot actually understand raw Go code and needs a translator to help. This is what we\u0026rsquo;ll be using to make our programs and run them in a consistent way.\nIn our \u0026ldquo;build\u0026rdquo; folder, we make a new text file named \u0026ldquo;build.bat\u0026rdquo; and place the following code inside it, replacing \u0026lsquo;main\u0026rsquo; and \u0026lsquo;run\u0026rsquo; as appropriate for you:\n1 2 3 4 5  SET GOPATH=%cd%\\.. :again go build -o ../out ../src/main/run.go \u0026amp;\u0026amp; START ../out/run.exe set /p response=Rerun? if \u0026#34;%response%\u0026#34; equ \u0026#34;\u0026#34; cls \u0026amp; goto again   Testing Our Installation Now we\u0026rsquo;re ready to start running some Go code, you can go ahead and place the following code into your \u0026ldquo;run.go\u0026rdquo; file:\n1 2 3 4 5 6 7  package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, Go\u0026#34;) }   Finally, just double click on your build.bat file.\nIf everything has gone to plan, you should now see the words \u0026ldquo;Hello, Go\u0026rdquo; appearing at the top of your command terminal that has appeared. You can also simply press enter to re-run the code!\nCongratulations, you\u0026rsquo;ve just successfully installed Go and run your first program, taking your first, somewhat arduous steps into working with this exciting language. Don\u0026rsquo;t worry, setting up your environment is easily one of the most unintuitive parts of working with Go. It may not seem like much, but it won\u0026rsquo;t be long now before you\u0026rsquo;re programming like a pro.\n","description":"How to set up your own Go environment on Windows","id":0,"section":"posts","tags":null,"title":"Getting Set Up With Go","uri":"https://magpieprogramming.com/posts/go-setup/"},{"content":"What is Magpie Programming? Magpie Programming is a programming blog focusing on providing follow-along material through which you can learn new languages, become hardened veterans of their more obscure features and develop useful and interesting projects with all you\u0026rsquo;ve learned.\nThese projects vary massively in duration and difficulty, from a short 30-minute introductory command-line tool, through to series-length tutorials with the ability to make a program your own through further reading sidenotes.\nWhich Languages? Although longer projects on the blog will be focused on specific languages due to development constraints, we aim to produce various tutorials in the following languages:\n Go Java Python  How can I keep up to date? You can keep up to date by following us on Twitter \u0026amp; Github. If you\u0026rsquo;re into RSS feeds, go ahead an use our RSS feed link to stay up to date.\nGetting in touch Whether there\u0026rsquo;s something we\u0026rsquo;ve missed, something you\u0026rsquo;d like to see or need to get in touch for any reason, please do let us know by contacting us at magpieprogramming@gmail.com or any other social media outlets around the site.\n","description":"","id":1,"section":"","tags":null,"title":"About","uri":"https://magpieprogramming.com/about/"},{"content":"New Post 1  a := 3   Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus maximus iaculis sollicitudin. Proin commodo sed magna eu dapibus. Ut ut risus ligula. Aliquam sed rhoncus elit, iaculis sollicitudin sem. Donec nisl lectus, vestibulum in libero a, viverra auctor turpis. Donec non aliquet diam. Nullam quis nulla eu turpis accumsan posuere. Integer posuere molestie ex. Etiam sodales scelerisque tincidunt.\nMauris placerat, lectus at fringilla pulvinar, ex ante commodo orci, fermentum fermentum enim sem at velit. Curabitur tempor leo libero, non ultricies orci hendrerit vestibulum. Sed mollis gravida mauris, rhoncus dictum tortor auctor ut. Duis pulvinar dolor eu erat pellentesque, at fringilla neque convallis. Vestibulum elementum quam bibendum quam gravida fringilla. Praesent sed metus vitae tellus aliquam dapibus bibendum et justo. Donec ante tortor, tincidunt faucibus est ac, interdum vestibulum nunc. Praesent vestibulum aliquam mi, faucibus pellentesque massa vulputate at. Integer at pulvinar nisi. Aliquam aliquet odio sit amet nunc placerat vehicula. Proin erat sem, semper vitae enim ut, fermentum bibendum ex.\nMaecenas vel libero mattis, convallis massa in, dapibus nunc. In sollicitudin vitae leo dapibus tempus. Integer vel orci nunc. Phasellus ipsum nulla, egestas a odio vestibulum, luctus blandit felis. Donec dictum condimentum lorem nec semper. Nam ac eros sit amet mauris varius mollis. Maecenas ac iaculis est. Nullam porttitor risus nec nisl bibendum malesuada. Morbi ultrices orci ultricies, pulvinar lacus et, feugiat ante.\nProin fringilla dolor quis mollis iaculis. Aliquam malesuada ligula non dui maximus ultricies. Curabitur ligula metus, semper id turpis vitae, luctus interdum odio. Praesent sed orci sed leo commodo faucibus a ut ex. Cras fringilla convallis ipsum, nec interdum nisi interdum quis. Ut eget condimentum quam. Quisque et ipsum risus. Praesent aliquam pharetra felis in varius. Integer a ligula pulvinar, pretium urna sit amet, mollis mi.\nInteger euismod augue luctus euismod iaculis. Cras suscipit ante dolor, ac aliquet velit porttitor eu. Praesent auctor condimentum suscipit. Sed at pharetra dui, blandit ultrices metus. Vivamus posuere vehicula sagittis. Vestibulum orci nisl, tempus vel leo id, ullamcorper condimentum tortor. Nulla sollicitudin ullamcorper mi vitae suscipit. Ut porttitor malesuada ipsum vel malesuada. Cras ut lorem vitae nunc molestie consectetur nec sit amet velit. Suspendisse a lorem sodales nibh congue molestie quis ac libero. Sed at turpis eu arcu accumsan laoreet. Curabitur at nisl ut quam feugiat viverra. Quisque finibus ultrices elit sit amet lobortis. Donec eu mauris nunc. Duis sed elementum libero.\nNext Heading java\rgo\r\r1  System.out.println(\u0026#34;Hello World!\u0026#34;);   \r 1 2 3 4 5  import ( \u0026#34;fmt\u0026#34; ) fmt.Println(\u0026#34;Hello World\u0026#34;)   \r \r\r'use strict';\rvar containerId = JSON.parse(\"\\\"10840ed3c0972787\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar codetabLinks = null;\rvar codetabContents = null;\rvar ids = [];\rif (containerElem) {\rcodetabLinks = containerElem.querySelectorAll('.codetab__link');\rcodetabContents = containerElem.querySelectorAll('.codetab__content');\r}\rfor (var i = 0; i 0) {\rcodetabContents[0].style.display = 'block';\r}\r java\rjavascript\r\r1  System.out.println(\u0026#39;Hello World!\u0026#39;);   \r 1  console.log(\u0026#39;Hello World!\u0026#39;);   \r \r\r'use strict';\rvar containerId = JSON.parse(\"\\\"06c1a42803069297\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar codetabLinks = null;\rvar codetabContents = null;\rvar ids = [];\rif (containerElem) {\rcodetabLinks = containerElem.querySelectorAll('.codetab__link');\rcodetabContents = containerElem.querySelectorAll('.codetab__content');\r}\rfor (var i = 0; i 0) {\rcodetabContents[0].style.display = 'block';\r}\r ","description":"Just a test post to ensure all is working as expected","id":2,"section":"posts","tags":null,"title":"Test Post","uri":"https://magpieprogramming.com/posts/a/"}]